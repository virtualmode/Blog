Команды LLVM
============

Преобразование кода в текстовое представление LLVM IR биткода
-------------------------------------------------------------

Через драйвер Clang::

    clang -S -emit-llvm test.c

Напрямую с помощью компилятора::

    clang -cc1 test.c -emit-llvm

В результате получается ll-файл. `-cc1` позволяет использовать интересные параметры типа `-ast-print` для вывода абстрактного синтаксического дерева.
Для более подробной справки можно использовать `-cc1 --help`

Получение ассемблерного листинга
--------------------------------

Для 32-битной архитектуры::

    clang -S -m32 test.c -o test-32bit.S

Для текущей архитектуры::

    clang -S test.c -o test-64bit.S

Ковейер компиляции
------------------

Получение двоичного LLVM IR биткода::

    llvm-as test.ll -o test.bc

Обратное преобразование с помощью дизассемблера `llvm-dis`::

    TODO Дописать пример.

Вывод информации о преобразовании::

    opt -stats test.bc -o test.bc

Трансляция на язык ассемблера::

    llc -stats test.bc -o test.S

Получение объектного файла::

    llvm-mc -filetype=obj test.S -o test.o

Компоновка в исполняемый файл с помощью GCC и LLD (компоновщик LLVM)::

    gcc test.o -o test
    lld test.o -o test
